# Generated by Django 2.1.3 on 2018-11-27 20:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civicNumber', models.IntegerField()),
                ('streetType', models.CharField(max_length=50)),
                ('streetName', models.CharField(max_length=50)),
                ('officeNumber', models.CharField(blank=True, max_length=12, null=True)),
                ('postalCode', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Diplome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('grade', models.CharField(max_length=50)),
                ('specialization', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('C', 'Current'), ('F', 'Finished')], max_length=20, null=True)),
                ('jobType', models.CharField(blank=True, choices=[('E', 'Employee'), ('F', 'Freelance'), ('C', 'Contractual'), ('EN', 'Entrepreneur'), ('T', 'Trainee'), ('V', 'Volunteer'), ('H', 'Hobbyist'), ('O', 'Other')], max_length=20, null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NamedModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Object Name', help_text='A brief, memorable and descriptive name', max_length=50, unique=True)),
                ('brief', models.TextField(blank=True, help_text='A short description of the task', max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(help_text='First Name', max_length=50)),
                ('lastName', models.CharField(help_text='Last Name', max_length=50)),
                ('birthDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Scholarite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('C', 'Current'), ('F', 'Finished'), ('A', 'Active'), ('S', 'Stopped')], default='F', max_length=20, null=True)),
                ('diplome', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Diplome')),
            ],
        ),
        migrations.CreateModel(
            name='WebToolInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('hasA', models.ManyToManyField(blank=True, related_name='_category_hasA_+', to='core.Category')),
                ('isA', models.ManyToManyField(blank=True, related_name='_category_isA_+', to='core.Category')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('nuberOfHours', models.FloatField()),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('C', 'Current'), ('F', 'Finished'), ('A', 'Active'), ('S', 'Stopped')], default='F', max_length=20, null=True)),
                ('diplome', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Diplome')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('hasA', models.ManyToManyField(blank=True, related_name='_interest_hasA_+', to='core.Interest')),
                ('isA', models.ManyToManyField(blank=True, related_name='_interest_isA_+', to='core.Interest')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('needed_interest', models.ManyToManyField(blank=True, help_text='Des intérêts pour certaines choses', to='core.Interest')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Address')),
                ('phone', models.ManyToManyField(to='core.PhoneNumber')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('locations', models.ManyToManyField(to='core.Location')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('hasA', models.ManyToManyField(blank=True, related_name='_quality_hasA_+', to='core.Quality')),
                ('isA', models.ManyToManyField(blank=True, related_name='_quality_isA_+', to='core.Quality')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('hasA', models.ManyToManyField(blank=True, related_name='_skill_hasA_+', to='core.Skill')),
                ('isA', models.ManyToManyField(blank=True, related_name='_skill_isA_+', to='core.Skill')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
                ('category', models.ManyToManyField(to='core.Category')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.CreateModel(
            name='WebTool',
            fields=[
                ('namedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.NamedModel')),
            ],
            bases=('core.namedmodel',),
        ),
        migrations.AddField(
            model_name='webtoolinstance',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Organization'),
        ),
        migrations.AddField(
            model_name='webtoolinstance',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.WebTool'),
        ),
        migrations.AddField(
            model_name='scholarite',
            name='institutions',
            field=models.ManyToManyField(to='core.Organization'),
        ),
        migrations.AddField(
            model_name='jobdescription',
            name='needed_quality',
            field=models.ManyToManyField(blank=True, help_text='Des qualités requises ou qui aident à bien faire le travail', to='core.Quality'),
        ),
        migrations.AddField(
            model_name='jobdescription',
            name='needed_skils',
            field=models.ManyToManyField(blank=True, help_text='Des compétences nécessaires', to='core.Skill'),
        ),
        migrations.AddField(
            model_name='job',
            name='description',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.JobDescription'),
        ),
        migrations.AddField(
            model_name='job',
            name='organization',
            field=models.ManyToManyField(to='core.Organization'),
        ),
        migrations.AddField(
            model_name='formation',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Organization'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='activity',
            field=models.ForeignKey(help_text='What should be done.', on_delete=django.db.models.deletion.PROTECT, to='core.Task'),
        ),
    ]
